transformations {
  question_1_cte = """
    -- CTE 1: Create `visited_provider_table` by joining provider_table and visit_table
    WITH visited_provider_table AS (
      SELECT 
        p.provider_id,
        p.provider_specialty,
        CONCAT(p.first_name, ' ', p.middle_name, ' ', p.last_name) AS full_name,
        DATE_FORMAT(v.date_of_visit, 'yyyy_MM') AS year_month,
        v.visit_id
      FROM provider_table p
      LEFT JOIN visit_table v
      ON p.provider_id = v.provider_id
    ),

    -- CTE 2: Aggregate visit counts for each provider and specialty
    visited_provider_aggregated AS (
      SELECT 
        provider_specialty,
        provider_id,
        full_name,
        COUNT(provider_id) AS count_of_visit
      FROM visited_provider_table
      GROUP BY provider_specialty, provider_id, full_name
      ORDER BY provider_specialty, provider_id, full_name           
    ),

    -- CTE 3: Re-structure the table to accommodate the required JSON report format
    re_structured_data AS (
      SELECT 
        provider_specialty,
        NAMED_STRUCT(
          'provider_id', provider_id,
          'full_name', full_name,
          'count_of_visit', count_of_visit
        ) AS details
      FROM visited_provider_aggregated
    ),

    -- CTE 4: Aggregate the re-structure table for each provider_specialty to accommodate the required JSON report format
    aggregated_data AS (
      SELECT 
        provider_specialty,
        COLLECT_LIST(details) AS details_list
      FROM re_structured_data
      GROUP BY provider_specialty
    )

    -- Final select statement to map the provider_specialty to their detailed data
    SELECT 
      MAP_FROM_ARRAYS(
        COLLECT_LIST(provider_specialty), 
        COLLECT_LIST(details_list)
      ) AS provider_specialty
    FROM aggregated_data
  """

  question_2_cte = """
    -- CTE 1: Create `visited_provider_table` by joining provider_table and visit_table
    WITH visited_provider_table AS (
      SELECT 
        p.provider_id,
        p.provider_specialty,
        CONCAT(p.first_name, ' ', p.middle_name, ' ', p.last_name) AS full_name,
        DATE_FORMAT(v.date_of_visit, 'yyyy_MM') AS year_month,
        v.visit_id
      FROM provider_table p
      LEFT JOIN visit_table v
      ON p.provider_id = v.provider_id
    ),

    -- CTE 2: Aggregate visit counts for each provider and year_month
    visited_provider_aggregated AS (
      SELECT 
        provider_id,
        year_month,
        COUNT(DISTINCT visit_id) AS count_of_visit
      FROM visited_provider_table
      GROUP BY provider_id, year_month
      ORDER BY provider_id, year_month          
    ),

    -- CTE 3: Re-structure the table to accommodate the required JSON report format
    re_structured_data AS (
      SELECT 
        provider_id,
        NAMED_STRUCT(
          'year_month', year_month,
          'count_of_visit', count_of_visit
        ) AS details
      FROM visited_provider_aggregated
    ),

    -- CTE 4: Aggregate the re-structure table for each provider_id to accommodate the required JSON report
    aggregated_data AS (
      SELECT 
        provider_id,
        COLLECT_LIST(details) AS details_list
      FROM re_structured_data
      GROUP BY provider_id
    )

    -- Final select statement to map the sprovider_id to their detailed data
    SELECT 
      MAP_FROM_ARRAYS(
        COLLECT_LIST(provider_id), 
        COLLECT_LIST(details_list)
      ) AS provider_id
    FROM aggregated_data
  """
}
